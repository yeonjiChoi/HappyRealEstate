<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.happyhouse.mapper.MemberMapper">

	<!-- 모든 회원의 정보를 반환 -->
	<select id="selectMember" resultType="memberDto">
		select userId, userPwd,
		userName, email, authority, joinDate
		from member
		order by joinDate desc
	</select>
	<!-- 아이디 중복 검사 - 사용중이면 1, 사용중이지 않으면 0 리턴 -->
	<select id="selectId" parameterType="string" resultType="int">
		select
		count(*)
		from member
		where userId = #{userId}
	</select>
	<!-- 회원 등록 -->
	<insert id="insertMember" parameterType="memberDto">
		insert into
		member(userId, userPwd, userName, email, joinDate)
		values (#{userId},
		#{userPwd}, #{userName}, #{email}, now())
	</insert>
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="memberDto">
		update member
		set
		userName = #{userName}, email = #{email}, authority=#{authority}
		where
		userId = #{userId}
	</update>
	<!-- 회원 권한(USER/ADMIN) 수정 -->
	<update id="updateAuthMember" parameterType="memberDto">
		update member
		set
		authority = #{authority}
		where userId = #{userId}
	</update>
	<!-- 회원 삭제 -->
	<delete id="deleteMember" parameterType="string">
		delete
		from member
		where
		userId = #{userId}
	</delete>

	<!-- 회원 로그인 -->
	<select id="login" parameterType="memberDto"
		resultType="memberDto">
		select userId, userPwd, userName, email, authority
		from
		member
		where userId = #{userId} and userPwd = #{userPwd}
	</select>
	<!-- userId에 해당하는 회원 정보 반환 -->
	<select id="userInfo" parameterType="String"
		resultType="memberDto">
		select userId, userName, email, authority, joinDate
		from
		member
		where userId = #{userId}
	</select>
</mapper>